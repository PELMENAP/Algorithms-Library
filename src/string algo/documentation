Документация по функциям
Функции для работы со строками

Этот файл содержит несколько функций, предназначенных для выполнения различных операций над строками. Ниже приведено описание каждой функции.
char* longestPalindrome(const char* s);

Описание:
Эта функция принимает на вход строку s и возвращает указатель на самую длинную подстроку, которая является палиндромом. Если таких подстрок несколько, возвращается первая найденная.

Аргументы:
    s - указатель на исходную строку (тип const char*).
Возвращаемое значение:
    Указатель на строку, содержащую самый длинный палиндром (тип char*).

char* findLongestSorted(const char* s);

Описание:
Эта функция принимает на вход строку s и возвращает указатель на самую длинную подстроку, в которой символы идут в отсортированном порядке по возрастанию.

Аргументы:
    s - указатель на исходную строку (тип const char*).
Возвращаемое значение:
    Указатель на строку, содержащую самую длинную отсортированную подстроку (тип char*).

char* longestIncreasingSubstring(const char* s);

Описание:
Эта функция принимает на вход строку s и возвращает указатель на самую длинную подстроку, в которой символы идут в строго возрастающем порядке.

Аргументы:
    s - указатель на исходную строку (тип const char*).
Возвращаемое значение:
    Указатель на строку, содержащую самую длинную подстроку с возрастающими символами (тип char*).

char* findLCS(char* X, char* Y);

Описание:
Эта функция принимает на вход две строки X и Y и возвращает указатель на строку, содержащую их наибольшую общую подпоследовательность (Longest Common Subsequence, LCS).

Аргументы:
    X - указатель на первую строку (тип char*).
    Y - указатель на вторую строку (тип char*).
Возвращаемое значение:
    Указатель на строку, содержащую наибольшую общую подпоследовательность (тип char*).

char* findLongestCommonSubstring(char* X, char* Y);

Описание:
Эта функция принимает на вход две строки X и Y и возвращает указатель на строку, содержащую их наибольшую общую подстроку (Longest Common Substring).

Аргументы:
    X - указатель на первую строку (тип char*).
    Y - указатель на вторую строку (тип char*).
Возвращаемое значение:
    Указатель на строку, содержащую наибольшую общую подстроку (тип char*).

int find(const char* text, const char* substr);

Описание:
Эта функция принимает на вход строку text и подстроку substr и возвращает индекс первого вхождения substr в text. Если подстрока не найдена, возвращается -1.

Аргументы:
    text - указатель на исходную строку (тип const char*).
    substr - указатель на подстроку для поиска (тип const char*).
Возвращаемое значение:
    Индекс первого вхождения подстроки в строку (тип int), или -1, если подстрока не найдена.



Пример использования:

#include <stdio.h>
#include "string_functions.h"

int main() {
    const char* s = "babad";
    char* palindrome = longestPalindrome(s);
    printf("Longest Palindrome: %s\n", palindrome);

    char* sorted = findLongestSorted(s);
    printf("Longest Sorted Substring: %s\n", sorted);

    char* increasing = longestIncreasingSubstring(s);
    printf("Longest Increasing Substring: %s\n", increasing);

    char* X = "ABCBDAB";
    char* Y = "BDCABC";
    char* lcs = findLCS(X, Y);
    printf("Longest Common Subsequence: %s\n", lcs);

    char* lcsstr = findLongestCommonSubstring(X, Y);
    printf("Longest Common Substring: %s\n", lcsstr);

    const char* text = "hello world";
    const char* substr = "world";
    int index = find(text, substr);
    printf("Index of substring: %d\n", index);

    return 0;
}