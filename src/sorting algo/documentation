Документация к функциям сортировки и генерации массива

Описание функций

Этот файл содержит несколько функций для генерации массива случайных чисел и различных методов сортировки массивов.

1. `int* generateRandomArrayMassive(size_t size, size_t maxValue);`

Описание:
Функция генерирует массив случайных чисел заданного размера.

Параметры:
    size_t size`: Размер массива (количество элементов).
    size_t maxValue`: Максимальное значение для элементов массива.

Возвращаемое значение:
- Указатель на сгенерированный массив целых чисел.

2. `void quickSort(int *arr, size_t start, size_t end);`

Описание:
Функция сортирует массив целых чисел с помощью алгоритма быстрой сортировки (QuickSort).

Параметры:
    int *arr`: Указатель на массив целых чисел.
    size_t start`: Индекс начала сегмента массива, который нужно сортировать.
    size_t end`: Индекс конца сегмента массива, который нужно сортировать.

Возвращаемое значение:
- Отсутствует (сортировка производится на месте).

3. `void heapSort(int *arr, size_t n);`

Описание:
Функция сортирует массив целых чисел с помощью алгоритма пирамидальной сортировки (HeapSort).

Параметры:
    int *arr`: Указатель на массив целых чисел.
    size_t n`: Размер массива (количество элементов).

Возвращаемое значение:
- Отсутствует (сортировка производится на месте).

4. `void introSort(int *arr, size_t n);`

Описание:
Функция сортирует массив целых чисел с помощью алгоритма Introspective Sort, который комбинирует быструю сортировку, пирамидальную сортировку и сортировку вставками.

Параметры:
    int *arr`: Указатель на массив целых чисел.
    size_t n`: Размер массива (количество элементов).

Возвращаемое значение:
- Отсутствует (сортировка производится на месте).

5. `void insertionSort(int *arr, size_t left, size_t right);`

Описание:
Функция сортирует массив целых чисел с помощью алгоритма сортировки вставками (Insertion Sort).

Параметры:
    int *arr`: Указатель на массив целых чисел.
    size_t left`: Индекс начала сегмента массива, который нужно сортировать.
    size_t right`: Индекс конца сегмента массива, который нужно сортировать.

Возвращаемое значение:
- Отсутствует (сортировка производится на месте).

6. `void timSort(int *arr, size_t n);`

Описание:
Функция сортирует массив целых чисел с помощью алгоритма Тимсорт (TimSort), который является гибридом сортировки слиянием и сортировки вставками.

Параметры:
    int *arr`: Указатель на массив целых чисел.
    size_t n`: Размер массива (количество элементов).

Возвращаемое значение:
- Отсутствует (сортировка производится на месте).

7. `void mergeSort(int *array, size_t n);`

Описание:
Функция сортирует массив целых чисел с помощью алгоритма сортировки слиянием (MergeSort).

Параметры:
    int *array`: Указатель на массив целых чисел.
    size_t n`: Размер массива (количество элементов).

Возвращаемое значение:
- Отсутствует (сортировка производится на месте).

8. `void bubbleSort(int *array, size_t n);`

Описание:
Функция сортирует массив целых чисел с помощью алгоритма сортировки пузырьком (Bubble Sort).

Параметры:
    int *array`: Указатель на массив целых чисел.
    size_t n`: Размер массива (количество элементов).

Возвращаемое значение:
- Отсутствует (сортировка производится на месте).

9. `void combSort(int* array, size_t n);`

Описание:
Функция сортирует массив целых чисел с помощью алгоритма сортировки расчёской (Comb Sort).

Параметры:
    int* array`: Указатель на массив целых чисел.
    size_t n`: Размер массива (количество элементов).

Возвращаемое значение:
- Отсутствует (сортировка производится на месте).

Примечание
Все функции сортировки работают на месте, изменяя переданный массив напрямую. Поэтому перед использованием функций сортировки, убедитесь, что у вас есть резервная копия массива, если это необходимо.